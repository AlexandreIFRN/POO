#Lista (list)
# ğŸ‘‰ Ã‰ uma coleÃ§Ã£o mutÃ¡vel (pode mudar).
# ğŸ‘‰ Aceita elementos repetidos.
# ğŸ‘‰ MantÃ©m a ordem em que os itens foram adicionados.

# frutas = ["maÃ§Ã£", "banana", 'uva']

# for i in range(len(frutas)):
#     print(frutas[i])

# for fruta in frutas:
#     print(fruta)


# for i, fruta in enumerate(frutas):
#     print(i, fruta)



# Tupla (tuple)

# ğŸ‘‰ Igual a lista, mas Ã© imutÃ¡vel (nÃ£o pode mudar).
# ğŸ‘‰ Boa para dados que nÃ£o devem ser alterados.
# ğŸ‘‰ TambÃ©m mantÃ©m a ordem.
# cores = ("vermelho", "verde", "azul")

# for cor in cores:
#     print(cor)


# DicionÃ¡rio (dict)

# ğŸ‘‰ Ã‰ uma coleÃ§Ã£o de pares chave: valor.
# ğŸ‘‰ NÃ£o permite chaves duplicadas.
# ğŸ‘‰ Muito usado para representar objetos/entidades.

# aluno = {

#     "matricula": "20250001",
#     "nome": "Alexandre",
#     "curso": "TSI",
#     "periodo": "2"
# }

# print(aluno,"Alexandre")


# Conjunto (set)

# ğŸ‘‰ Ã‰ uma coleÃ§Ã£o de valores Ãºnicos (nÃ£o aceita repetiÃ§Ã£o).
# ğŸ‘‰ NÃ£o garante ordem.
# ğŸ‘‰ Bom para operaÃ§Ãµes matemÃ¡ticas: uniÃ£o, interseÃ§Ã£o, diferenÃ§a.



a = {1, 2, 3, 4, 5}
b = {4, 5, 6, 7, 8}
print("Conjunto a:", a)
print("Conjunto b:", b)
print("a uniÃ£o b:", a | b)
print("a interseÃ§Ã£o b:", a & b)
print("DiferenÃ§a a menos b:", a - b)
print("DifereÃ§a b menos a", sorted(b - a))

